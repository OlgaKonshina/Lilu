import streamlit as st
from datetime import datetime
from doctors import DoctorMatcher
from ai_helper import select_top_doctors
import time
from ai_helper import (
    get_ai_recommendation,
    get_doctor_search_criteria,
    initialize_ai_consultation,
    generate_next_question,
    process_user_answer,
    is_consultation_complete
)
from voce_dialog import VoiceDialog
from voice_additional_questions import VoiceAdditionalQuestions
from complaints_collector import ComplaintsCollector

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –õ–∏–ª—É",
    page_icon="üè•",
    layout="centered"
)


def reset_session():
    """–°–±—Ä–æ—Å —Å–µ—Å—Å–∏–∏"""
    for key in list(st.session_state.keys()):
        del st.session_state[key]


def main():
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    st.title("üè• –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –õ–∏–ª—É")
    st.markdown("---")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞
    if 'voice_dialog' not in st.session_state:
        st.session_state.voice_dialog = VoiceDialog()

    voice_dialog = st.session_state.voice_dialog

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —É—Ç–æ—á–Ω—è—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    if 'voice_additional' not in st.session_state:
        st.session_state.voice_additional = VoiceAdditionalQuestions()

    voice_additional = st.session_state.voice_additional

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session state
    if 'current_step' not in st.session_state:
        st.session_state.current_step = 0
    if 'user_data' not in st.session_state:
        st.session_state.user_data = {}

    # –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ü–ï–†–ï–•–û–î –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞
    if (voice_dialog.get_status() == "completed" and
            st.session_state.current_step == 4):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞
        st.session_state.user_data['symptoms'] = "–ì–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è"
        st.session_state.user_data['recommendation'] = voice_dialog.recommendation
        st.session_state.user_data['consultation_type'] = '–ì–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è'
        st.session_state.user_data['voice_dialog_results'] = voice_dialog.get_results()

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —à–∞–≥—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        st.session_state.current_step = 6
        st.rerun()

    # –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ü–ï–†–ï–•–û–î –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —É—Ç–æ—á–Ω—è—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    if (voice_additional.get_status() == "completed" and
            st.session_state.current_step == 6.5):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç—ã
        st.session_state.additional_answers = voice_additional.get_answers()
        st.session_state.current_step = 7
        st.rerun()

    # –ë–ª–æ–∫ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞ –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω)
    if voice_dialog.is_active:
        show_voice_dialog_status(voice_dialog)
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ã—á–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        show_current_step()

    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª–æ
    if st.session_state.current_step > 0 and not voice_dialog.is_active:
        st.markdown("---")
        if st.button("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"):
            reset_session()
            st.rerun()


def show_voice_dialog(voice_dialog):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞"""
    st.subheader("üé§ –ì–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –õ–∏–ª—É")

    # –°—Ç–∞—Ç—É—Å –¥–∏–∞–ª–æ–≥–∞
    if voice_dialog.current_question:
        st.info(f"**–¢–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å:** {voice_dialog.current_question}")

    # –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞
    if 'voice_dialog_status' in st.session_state:
        st.markdown("### üìù –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞:")
        for message in st.session_state.voice_dialog_status[-10:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
            st.write(message)

    # –ü—Ä–æ–≥—Ä–µ—Å—Å
    if voice_dialog.consultation:
        progress = voice_dialog.consultation['questions_asked'] / 2
        st.progress(progress)
        st.write(f"–í–æ–ø—Ä–æ—Å {voice_dialog.consultation['questions_asked'] + 1} –∏–∑ 2")

    # –ö–Ω–æ–ø–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    if st.button("üõë –ó–∞–≤–µ—Ä—à–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"):
        voice_dialog.stop_dialog()
        st.rerun()

    # –ï—Å–ª–∏ –¥–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º
    if voice_dialog.get_status() == "completed":
        st.success("‚úÖ –ì–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        st.info(f"**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** {voice_dialog.recommendation}")

        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ö–æ–¥ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        with st.spinner("–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —É—Ç–æ—á–Ω—è—é—â–∏–º –≤–æ–ø—Ä–æ—Å–∞–º..."):
            time.sleep(3)
            st.session_state.user_data['symptoms'] = "–ì–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è"
            st.session_state.user_data['recommendation'] = voice_dialog.recommendation
            st.session_state.user_data['consultation_type'] = '–ì–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è'
            st.session_state.current_step = 6
            st.rerun()


def show_current_step():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ–∫—É—â–∏–π —à–∞–≥"""
    current_step = st.session_state.current_step

    if current_step == 0:
        show_welcome_screen()
    elif current_step == 1:
        show_city_selection()
    elif current_step == 2:
        show_doctor_selection_type()
    elif current_step == 3:
        show_doctor_name_input()
    elif current_step == 3.5:
        show_specialty_selection()
    elif current_step == 4:
        show_symptoms_input()
    elif current_step == 5:
        show_ai_consultation()
    elif current_step == 6:
        show_recommendation()
    elif current_step == 6.5:
        show_additional_questions()
    elif current_step == 7:
        show_doctor_search_results()
   # elif current_step == 8:
      #  show_final_results()


def show_welcome_screen():
    """–≠–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"""
    st.markdown("## üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")
    st.markdown("–Ø - **–õ–∏–ª—É**, –≤–∞—à –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –ü–æ–º–æ–≥—É –≤–∞–º –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –Ω—É–∂–Ω–æ–º—É –≤—Ä–∞—á—É.")

    if st.button(" C—Ç–∞—Ä—Ç!", type="primary"):
        st.session_state.current_step = 1
        st.rerun()


def show_city_selection():
    """–í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞"""
    # st.subheader("üìç –®–∞–≥ 1: –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥")

    # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥
    city = st.text_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:", placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞")

    if city:
        st.session_state.user_data['city'] = city
        st.success(f"‚úÖ –í—ã–±—Ä–∞–Ω –≥–æ—Ä–æ–¥: {city}")

        # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        if st.button(" –î–∞–ª–µ–µ", type="primary"):
            st.session_state.current_step = 2
            st.rerun()
    else:
        st.warning("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥")


def show_doctor_selection_type():
    """–í—ã–±–æ—Ä —Ç–∏–ø–∞ –∑–∞–ø–∏—Å–∏ –∫ –≤—Ä–∞—á—É"""
    st.subheader("üë®‚Äç‚öïÔ∏è  –ó–∞–ø–∏—Å—å –∫ –≤—Ä–∞—á—É")
    st.write("–í—ã –∑–Ω–∞–µ—Ç–µ, –∫ –∫–∞–∫–æ–º—É –≤—Ä–∞—á—É —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?")

    col1, col2, col3 = st.columns(3)

    with col1:
        if st.button("‚úÖ –ó–Ω–∞—é –§–ò–û", use_container_width=True):
            st.session_state.user_data['knows_doctor'] = 'knows_name'
            st.session_state.current_step = 3
            st.rerun()

    with col2:
        if st.button("üìã –ó–Ω–∞—é —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é", use_container_width=True):
            st.session_state.user_data['knows_doctor'] = 'knows_specialty'
            st.session_state.current_step = 3.5
            st.rerun()

    with col3:
        if st.button("‚ùå –ù–µ –∑–Ω–∞—é", use_container_width=True):
            st.session_state.user_data['knows_doctor'] = 'dont_know'
            st.session_state.current_step = 4
            st.rerun()


def show_doctor_name_input():
    """–í–≤–æ–¥ –§–ò–û –≤—Ä–∞—á–∞"""
    st.subheader("  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–∞—á–µ")

    knows_name = st.radio(
        "–ó–Ω–∞–µ—Ç–µ –ª–∏ –≤—ã –§–ò–û –≤—Ä–∞—á–∞?",
        ["–î–∞, –∑–Ω–∞—é –§–ò–û", "–ù–µ—Ç, –∑–Ω–∞—é —Ç–æ–ª—å–∫–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å"],
        key="knows_name_radio"
    )

    if knows_name == "–î–∞, –∑–Ω–∞—é –§–ò–û":
        doctor_name = st.text_input("–í–≤–µ–¥–∏—Ç–µ –§–ò–û –≤—Ä–∞—á–∞ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å :")
        if doctor_name:
            st.session_state.user_data['doctor_name'] = doctor_name
            st.session_state.user_data['doctor_specialty'] = "–ò–∑–≤–µ—Å—Ç–Ω–æ –§–ò–û"

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –∑–∞–ø–∏—Å–∏
            st.markdown("---")
            show_doctor_appointment_stub()

            if st.button("‚û°Ô∏è –ó–∞–≤–µ—Ä—à–∏—Ç—å", type="primary"):
                save_consultation()
                st.session_state.current_step = 8
                st.rerun()

    else:
        # –ï—Å–ª–∏ –∑–Ω–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        if st.button("‚û°Ô∏è –í—ã–±—Ä–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é", type="primary"):
            st.session_state.current_step = 3.5
            st.rerun()


def show_specialty_selection():
    """–í—ã–±–æ—Ä —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—Ä–∞—á–∞"""

    # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    specialties = [
        "–¢–µ—Ä–∞–ø–µ–≤—Ç", "–ö–∞—Ä–¥–∏–æ–ª–æ–≥", "–ù–µ–≤—Ä–æ–ª–æ–≥", "–ì–∞—Å—Ç—Ä–æ—ç–Ω—Ç–µ—Ä–æ–ª–æ–≥", "–≠–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥",
        "–û—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥", "–õ–û–†", "–î–µ—Ä–º–∞—Ç–æ–ª–æ–≥", "–ì–∏–Ω–µ–∫–æ–ª–æ–≥", "–£—Ä–æ–ª–æ–≥",
        "–¢—Ä–∞–≤–º–∞—Ç–æ–ª–æ–≥", "–•–∏—Ä—É—Ä–≥", "–ü–µ–¥–∏–∞—Ç—Ä", "–ü—Å–∏—Ö–∏–∞—Ç—Ä", "–ü—Å–∏—Ö–æ–ª–æ–≥",
        "–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥", "–û–Ω–∫–æ–ª–æ–≥", "–ê–ª–ª–µ—Ä–≥–æ–ª–æ–≥", "–†–µ–≤–º–∞—Ç–æ–ª–æ–≥"
    ]

    selected_specialty = st.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤—Ä–∞—á–∞:",
        [""] + specialties,
        key="specialty_select"
    )

    if selected_specialty:
        st.session_state.user_data['doctor_specialty'] = selected_specialty
        st.session_state.user_data['doctor_name'] = "–ù–µ –∏–∑–≤–µ—Å—Ç–Ω–æ"
        st.success(f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {selected_specialty}")

        if st.button("‚û°Ô∏è –£—Ç–æ—á–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞", type="primary"):
            st.session_state.current_step = 6.5
            st.rerun()


def show_symptoms_input():
    """–í–≤–æ–¥ –∂–∞–ª–æ–± - –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –±–µ–∑ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π"""
    st.subheader("ü§í –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –õ–∏–ª—É")

    voice_dialog = st.session_state.voice_dialog

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–±–æ—Ä—â–∏–∫–∞ –∂–∞–ª–æ–±
    if 'text_complaints_collector' not in st.session_state:
        st.session_state.text_complaints_collector = ComplaintsCollector()

    text_collector = st.session_state.text_complaints_collector

    st.markdown("""
    ### üìù –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:

    –õ–∏–ª—É –∑–∞–¥–∞—Å—Ç —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –æ –≤–∞—à–µ–º —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–∏, —á—Ç–æ–±—ã –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤—Ä–∞—á–∞.
    """)

    col1, col2 = st.columns(2)

    with col1:
        if st.button("üé§ –ì–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", type="primary", use_container_width=True):
            # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–π –¥–∏–∞–ª–æ–≥ –ë–ï–ó –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            voice_dialog.start_dialog({})

            # –°—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞–µ–º –æ–∑–≤—É—á–∫—É –ø–µ—Ä–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
            # voice_dialog._speak_first_two_questions_immediately()

            st.rerun()

    with col2:
        if st.button("üìù –¢–µ–∫—Å—Ç–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", type="secondary", use_container_width=True):
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–π –¥–∏–∞–ª–æ–≥ –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω
            if voice_dialog.is_active:
                voice_dialog.stop_dialog()
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Å–±–æ—Ä –ë–ï–ó –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            if not text_collector.is_active:
                text_collector.start_collection({})
            st.rerun()

    # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–û–õ–Ø (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ)
    st.markdown("---")
    st.markdown("#### üí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):")

    # –ü–æ–ª–µ –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏ –ø–æ–ª–∞ (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    age_gender = st.text_area(
        "–í–æ–∑—Ä–∞—Å—Ç –∏ –ø–æ–ª (–µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∫–∞–∑–∞—Ç—å):",
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 35 –ª–µ—Ç, –º—É–∂—á–∏–Ω–∞",
        height=60,
        key="age_gender_input"
    )

    # –û—Å–Ω–æ–≤–Ω—ã–µ –∂–∞–ª–æ–±—ã (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    main_symptoms = st.text_area(
        "–û—Å–Ω–æ–≤–Ω—ã–µ –∂–∞–ª–æ–±—ã (–µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∫–∞–∑–∞—Ç—å –∑–∞—Ä–∞–Ω–µ–µ):",
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –≥–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞...",
        height=80,
        key="main_symptoms_input"
    )

    # –ö–Ω–æ–ø–∫–∏ —Å –£–ß–ï–¢–û–ú –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã)
    if age_gender or main_symptoms:
        st.info("üí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç —É—á—Ç–µ–Ω–∞ –ø—Ä–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏")

        col1, col2 = st.columns(2)

        with col1:
            if st.button("üé§ –ù–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤—É—é —Å –¥–æ–ø. –¥–∞–Ω–Ω—ã–º–∏", use_container_width=True):
                initial_data = {
                    'age_gender': age_gender,
                    'main_symptoms': main_symptoms,
                }
                voice_dialog.start_dialog(initial_data)
                voice_dialog._speak_first_two_questions_immediately()
                st.rerun()

        with col2:
            if st.button("üìù –ù–∞—á–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—É—é —Å –¥–æ–ø. –¥–∞–Ω–Ω—ã–º–∏", use_container_width=True):
                if voice_dialog.is_active:
                    voice_dialog.stop_dialog()
                if not text_collector.is_active:
                    initial_data = {
                        'age_gender': age_gender,
                        'main_symptoms': main_symptoms,
                    }
                    text_collector.start_collection(initial_data)
                st.rerun()

    st.markdown("---")

    # –ï—Å–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–π –¥–∏–∞–ª–æ–≥ –∞–∫—Ç–∏–≤–µ–Ω
    if voice_dialog.is_active:
        show_voice_dialog_status(voice_dialog)
        st.markdown("---")

    # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Å–±–æ—Ä –∞–∫—Ç–∏–≤–µ–Ω
    elif text_collector.is_active and text_collector.consultation:
        show_text_complaints_collection(text_collector)
        return

    # –ï—Å–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–π –¥–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω
    elif voice_dialog.get_status() == "completed":
        st.success("‚úÖ –ì–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

        if voice_dialog.recommendation:
            st.info(f"**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** {voice_dialog.recommendation}")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        try:
            results = voice_dialog.get_results()
            st.session_state.user_data['symptoms'] = results.get('symptoms_text', '')
            st.session_state.user_data['recommendation'] = results.get('recommendation', '–¢–µ—Ä–∞–ø–µ–≤—Ç')
            st.session_state.user_data['consultation_type'] = '–ì–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è'
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {e}")

        if st.button("‚û°Ô∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ —É—Ç–æ—á–Ω—è—é—â–∏–º –≤–æ–ø—Ä–æ—Å–∞–º", type="primary"):
            st.session_state.current_step = 6
            st.rerun()

        st.markdown("---")


def show_text_complaints_collection(collector):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–±–æ—Ä–∞ –∂–∞–ª–æ–± —á–µ—Ä–µ–∑ LLM"""
    st.markdown("### üìù –¢–µ–∫—Å—Ç–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –õ–∏–ª—É")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ consultation —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if not collector.consultation:
        st.error("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏")
        return

    # –ü—Ä–æ–≥—Ä–µ—Å—Å
    #  progress = collector.get_progress()
    # st.progress(progress)
    # st.write(f"–í–æ–ø—Ä–æ—Å {collector.consultation['questions_asked'] + 1} –∏–∑ 2")

    # –¢–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
    current_question = collector.get_current_question()
    if current_question:
        st.info(f"**–õ–∏–ª—É:** {current_question}")

        # –ü–æ–ª–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
        answer = st.text_input("–í–∞—à –æ—Ç–≤–µ—Ç:", key=f"text_answer_{collector.consultation['questions_asked']}")

        if answer:
            if st.button("‚û°Ô∏è –û—Ç–≤–µ—Ç–∏—Ç—å", type="primary"):
                has_more = collector.process_answer(answer)
                if not has_more:  # –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                    try:
                        results = collector.get_results()
                        st.session_state.user_data['symptoms'] = results.get('symptoms_text', '')
                        st.session_state.user_data['recommendation'] = results.get('recommendation', '–¢–µ—Ä–∞–ø–µ–≤—Ç')
                        st.session_state.user_data['consultation_type'] = '–¢–µ–∫—Å—Ç–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è'
                        st.session_state.current_step = 6
                    except Exception as e:
                        st.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {e}")
                st.rerun()

    # –ö–Ω–æ–ø–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    if st.button("üõë –ó–∞–∫–æ–Ω—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", type="secondary"):
        collector.stop_collection()
        st.rerun()


def show_voice_dialog_status(voice_dialog):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞"""
    st.markdown("### üé§–ò–¥–µ—Ç –≥–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è...")

    # –¢–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
    # if voice_dialog.current_question:
    # st.info(f"**–¢–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å:** {voice_dialog.current_question}")

    # –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞
    if 'voice_dialog_status' in st.session_state:
        # st.markdown("#### üìù –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞:")
        for message in st.session_state.voice_dialog_status[-5:]:
            st.write(message)

    # –ü—Ä–æ–≥—Ä–µ—Å—Å
    if voice_dialog.consultation:
        progress = voice_dialog.consultation['questions_asked'] / 4
    # st.progress(progress)
    # st.write(f"–í–æ–ø—Ä–æ—Å {voice_dialog.consultation['questions_asked'] + 1} –∏–∑ 4")

    # –ö–Ω–æ–ø–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    if st.button("üõë –ó–∞–∫–æ–Ω—á–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", type="secondary", key="stop_voice_dialog"):
        voice_dialog.stop_dialog()
        st.rerun()

    # –ï—Å–ª–∏ –¥–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω
    if voice_dialog.get_status() == "completed":
        st.success("‚úÖ –ì–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

        if st.button("‚û°Ô∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ —É—Ç–æ—á–Ω—è—é—â–∏–º –≤–æ–ø—Ä–æ—Å–∞–º", type="primary"):
            st.session_state.user_data['symptoms'] = "–ì–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è"
            st.session_state.user_data['recommendation'] = voice_dialog.recommendation
            st.session_state.user_data['consultation_type'] = '–ì–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è'
            st.session_state.current_step = 6
            st.rerun()


def show_ai_consultation():
    """AI –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å 3 –≤–æ–ø—Ä–æ—Å–∞–º–∏"""
    st.subheader("üîç –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –õ–∏–ª—É")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
    if 'ai_consultation' not in st.session_state:
        st.session_state.ai_consultation = initialize_ai_consultation(
            st.session_state.user_data.get('symptoms', '')
        )

    consultation = st.session_state.ai_consultation

    # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
    progress = consultation['questions_asked'] / 4
    st.progress(progress)
    st.write(f"–í–æ–ø—Ä–æ—Å {consultation['questions_asked'] + 1} –∏–∑ 4")

    # –ï—Å–ª–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
    if not is_consultation_complete(consultation):

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–æ–ø—Ä–æ—Å, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
        if consultation['current_question'] is None:
            with st.spinner("–õ–∏–ª—É –¥—É–º–∞–µ—Ç –Ω–∞–¥ –≤–æ–ø—Ä–æ—Å–æ–º..."):
                if generate_next_question(consultation):
                    st.rerun()
                else:
                    st.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
                    return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
        if consultation['current_question']:
            st.markdown(f"**–õ–∏–ª—É:** {consultation['current_question']}")

            # –ü–æ–ª–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
            answer = st.text_input("–í–∞—à –æ—Ç–≤–µ—Ç:", key=f"answer_{consultation['questions_asked']}")

            if answer:
                if st.button("‚û°Ô∏è –û—Ç–≤–µ—Ç–∏—Ç—å", type="primary"):
                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç
                    consultation = process_user_answer(consultation, answer)
                    st.session_state.ai_consultation = consultation
                    st.rerun()

    else:
        # –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∑–∞–¥–∞–Ω—ã, –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
        if 'final_recommendation' not in st.session_state:
            with st.spinner("–õ–∏–ª—É –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã..."):
                recommendation = get_ai_recommendation(consultation['patient_info'])
                st.session_state.final_recommendation = recommendation
                st.session_state.user_data['recommendation'] = recommendation
                st.rerun()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –∏ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        st.success("‚úÖ –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∑–∞–¥–∞–Ω—ã!")
        st.info(f"**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –õ–∏–ª—É:** {st.session_state.final_recommendation}")

        if st.button("‚û°Ô∏è –ó–∞–≤–µ—Ä—à–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", type="primary"):
            st.session_state.current_step = 6
            st.rerun()


def show_recommendation():
    """–ü–æ–∫–∞–∑ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º"""
    st.subheader("üéØ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è")

    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –æ—Ç AI –µ—Å–ª–∏ –±—ã–ª–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ —Å–∏–º–ø—Ç–æ–º–∞–º
    if (st.session_state.user_data.get('knows_doctor') == 'dont_know' and
            'ai_consultation' in st.session_state and
            'recommendation' not in st.session_state.user_data):
        consultation = st.session_state.ai_consultation
        with st.spinner("–õ–∏–ª—É –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ —Å–∏–º–ø—Ç–æ–º—ã..."):
            recommendation = get_ai_recommendation(consultation['patient_info'])
            st.session_state.user_data['recommendation'] = recommendation
            st.session_state.user_data['doctor_specialty'] = recommendation
            st.session_state.user_data['consultation_type'] = 'AI –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è'

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
    if st.session_state.user_data.get('recommendation'):
        st.success("‚úÖ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        st.info(f"**–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç:** {st.session_state.user_data['recommendation']}")

    st.markdown("---")
    st.markdown("### üéØ –£—Ç–æ—á–Ω–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤")
    st.write("–î–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–¥–±–æ—Ä–∞ –≤—Ä–∞—á–∞ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤")

    if st.button("‚û°Ô∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ —É—Ç–æ—á–Ω—è—é—â–∏–º –≤–æ–ø—Ä–æ—Å–∞–º", type="primary"):
        st.session_state.current_step = 6.5
        st.rerun()


def show_additional_questions(voice=None):
    """–ë–ª–æ–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ —Å –≤—ã–±–æ—Ä–æ–º —Å–ø–æ—Å–æ–±–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è"""
    st.subheader(" –£—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –≤—Ä–∞—á–∞")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session state –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    if 'additional_answers' not in st.session_state:
        st.session_state.additional_answers = {}

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    voice_additional = st.session_state.voice_additional

    # –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
    st.markdown("### üìù –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è:")

    col1, col2 = st.columns(2)

    with col1:
        if st.button("üé§ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –≥–æ–ª–æ—Å–æ–º", type="primary", use_container_width=True):
            voice_additional.start_questions()
            st.rerun()

    with col2:
        if st.button("üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–º", type="secondary", use_container_width=True):
            # –£–±–µ–¥–∏–º—Å—è —á—Ç–æ –≥–æ–ª–æ—Å–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
            if voice_additional.is_active:
                voice_additional.stop_questions()
            st.rerun()

    st.markdown("---")

    # –ï—Å–ª–∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∞–∫—Ç–∏–≤–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö —Å—Ç–∞—Ç—É—Å
    if voice_additional.is_active:
        show_voice_additional_questions_status(voice_additional)
        st.markdown("---")
        st.info("‚ÑπÔ∏è –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–º –Ω–∏–∂–µ –∏–ª–∏ –¥–æ–∂–¥–∞—Ç—å—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –æ–ø—Ä–æ—Å–∞")

    # –ï—Å–ª–∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    elif voice_additional.get_status() == "completed":
        st.success("‚úÖ –ì–æ–ª–æ—Å–æ–≤—ã–µ —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")

        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏
        voice_answers = voice_additional.get_answers()
        for key, value in voice_answers.items():
            if value:
                st.session_state.additional_answers[key] = value

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
        st.markdown("### üé§ –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã:")
        for key, value in voice_answers.items():
            if value:
                st.info(f"**{key}:** {value}")

        st.markdown("---")
        st.warning("‚ö†Ô∏è –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∏–∂–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ")

    # –¢–ï–ö–°–¢–û–í–´–ï –ü–û–õ–Ø (–≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã)
    st.markdown("### üìù –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:")

    # 1. –î–µ—Ç—Å–∫–∏–π –∏–ª–∏ –≤–∑—Ä–æ—Å–ª—ã–π –≤—Ä–∞—á
    st.markdown("#### –î–ª—è –∫–æ–≥–æ –Ω—É–∂–µ–Ω –≤—Ä–∞—á?")
    patient_type = st.text_area(
        "–û–ø–∏—à–∏—Ç–µ, –¥–ª—è –∫–æ–≥–æ –Ω—É–∂–µ–Ω –≤—Ä–∞—á:",
        value=st.session_state.additional_answers.get('patient_type', ''),
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –¥–ª—è –≤–∑—Ä–æ—Å–ª–æ–≥–æ –º—É–∂—á–∏–Ω—ã 35 –ª–µ—Ç, –¥–ª—è —Ä–µ–±–µ–Ω–∫–∞ 5 –ª–µ—Ç, –¥–ª—è –ø–æ–∂–∏–ª–æ–π –∂–µ–Ω—â–∏–Ω—ã...",
        height=60,
        key="patient_type_text"
    )
    if patient_type:
        st.session_state.additional_answers['patient_type'] = patient_type

    # 2. –ü–æ–ª –≤—Ä–∞—á–∞
    st.markdown("#### –í–∞–∂–µ–Ω –ª–∏ –ø–æ–ª –≤—Ä–∞—á–∞?")
    doctor_gender = st.text_area(
        "–ï—Å—Ç—å –ª–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –ø–æ–ª—É –≤—Ä–∞—á–∞?",
        value=st.session_state.additional_answers.get('doctor_gender', ''),
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ –∂–µ–Ω—â–∏–Ω–∞, –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –º—É–∂—á–∏–Ω–∞, –ø–æ–ª –Ω–µ –≤–∞–∂–µ–Ω...",
        height=60,
        key="doctor_gender_text"
    )
    if doctor_gender:
        st.session_state.additional_answers['doctor_gender'] = doctor_gender

    # 3. –°—Ç–∞–∂ –≤—Ä–∞—á–∞
    st.markdown("#### –í–∞–∂–µ–Ω –ª–∏ —Å—Ç–∞–∂ –≤—Ä–∞—á–∞?")
    experience = st.text_area(
        "–ö–∞–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—Ç–∞–∂—É –∏ –æ–ø—ã—Ç—É –≤—Ä–∞—á–∞?",
        value=st.session_state.additional_answers.get('experience', ''),
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –º–æ–ª–æ–¥–æ–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç, –æ–ø—ã—Ç–Ω—ã–π –≤—Ä–∞—á 10+ –ª–µ—Ç, –≤—Ä–∞—á –≤—ã—Å—à–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...",
        height=60,
        key="experience_text"
    )
    if experience:
        st.session_state.additional_answers['experience'] = experience

    # 4. –£—á–µ–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å
    st.markdown("#### –í–∞–∂–Ω–∞ –ª–∏ —É—á–µ–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å?")
    academic_degree = st.text_area(
        "–ï—Å—Ç—å –ª–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —É—á–µ–Ω–æ–π —Å—Ç–µ–ø–µ–Ω–∏?",
        value=st.session_state.additional_answers.get('academic_degree', ''),
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –∫–∞–Ω–¥–∏–¥–∞—Ç –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –Ω–∞—É–∫, –≤–∞–∂–Ω–æ –Ω–∞–ª–∏—á–∏–µ —É—á–µ–Ω–æ–π —Å—Ç–µ–ø–µ–Ω–∏, –Ω–µ –≤–∞–∂–Ω–æ...",
        height=60,
        key="academic_degree_text"
    )
    if academic_degree:
        st.session_state.additional_answers['academic_degree'] = academic_degree

    st.markdown("---")

    # 5. –¢–∏–ø –ø—Ä–∏–µ–º–∞
    st.markdown("#### –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–µ–º–µ")
    appointment_type = st.text_area(
        "–ö–∞–∫–æ–π —Ç–∏–ø –ø—Ä–∏–µ–º–∞ –≤–∞–º –Ω—É–∂–µ–Ω?",
        value=st.session_state.additional_answers.get('appointment_type', ''),
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ø–µ—Ä–≤–∏—á–Ω—ã–π –ø—Ä–∏–µ–º, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è, –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –æ—Å–º–æ—Ç—Ä...",
        height=60,
        key="appointment_type_text"
    )
    if appointment_type:
        st.session_state.additional_answers['appointment_type'] = appointment_type

    # 6. –ü—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∏–∞–≥–Ω–æ–∑—ã –∏ –∏—Å—Ç–æ—Ä–∏—è
    st.markdown("#### –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è")
    previous_diagnosis = st.text_area(
        "–ë—ã–ª–∏ –ª–∏ —Ä–∞–Ω–µ–µ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∏–∞–≥–Ω–æ–∑—ã –∏–ª–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –≤—Ä–∞—á–∞–º?",
        value=st.session_state.additional_answers.get('previous_diagnosis', ''),
        placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∏–∞–≥–Ω–æ–∑—ã, –∏—Å—Ç–æ—Ä–∏—é –ª–µ—á–µ–Ω–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å...",
        height=80,
        key="previous_diagnosis_text"
    )
    if previous_diagnosis:
        st.session_state.additional_answers['previous_diagnosis'] = previous_diagnosis

    # 7. –•—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è
    st.markdown("#### –ù–∞–ª–∏—á–∏–µ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π")
    chronic_diseases = st.text_area(
        "–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –∏–ª–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ –∑–¥–æ—Ä–æ–≤—å–µ–º?",
        value=st.session_state.additional_answers.get('chronic_diseases', ''),
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: —Å–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç, –≥–∏–ø–µ—Ä—Ç–æ–Ω–∏—è, –∞—Å—Ç–º–∞, –∞–ª–ª–µ—Ä–≥–∏–∏...",
        height=80,
        key="chronic_diseases_text"
    )
    if chronic_diseases:
        st.session_state.additional_answers['chronic_diseases'] = chronic_diseases

    # 8. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    st.markdown("#### –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è")
    additional_examinations = st.text_area(
        "–ö–∞–∫–∏–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏–ª–∏ –∞–Ω–∞–ª–∏–∑—ã –º–æ–≥—É—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è?",
        value=st.session_state.additional_answers.get('additional_examinations', ''),
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –£–ó–ò –±—Ä—é—à–Ω–æ–π –ø–æ–ª–æ—Å—Ç–∏, –ú–†–¢ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞, –∞–Ω–∞–ª–∏–∑—ã –∫—Ä–æ–≤–∏, —Ä–µ–Ω—Ç–≥–µ–Ω...",
        height=80,
        key="additional_examinations_text"
    )
    if additional_examinations:
        st.session_state.additional_answers['additional_examinations'] = additional_examinations

    # 9. –û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è
    st.markdown("#### –û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è")
    special_requirements = st.text_area(
        "–ï—Å—Ç—å –ª–∏ –æ—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∫ –≤—Ä–∞—á—É, –ø—Ä–∏–µ–º—É –∏–ª–∏ –∫–ª–∏–Ω–∏–∫–µ?",
        value=st.session_state.additional_answers.get('special_requirements', ''),
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–µ–º–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ, –≤—Ä–∞—á —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π, –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å "
                    "–æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏...",
        height=80,
        key="special_requirements_text"
    )
    if special_requirements:
        st.session_state.additional_answers['special_requirements'] = special_requirements

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
    required_fields_filled = (
            st.session_state.additional_answers.get('patient_type') and
            st.session_state.additional_answers.get('appointment_type')
    )

    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
    st.markdown("---")

    if required_fields_filled:
        st.success("‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!")

        if st.button("‚úÖ –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞", type="primary"):
            st.session_state.current_step = 7
            st.rerun()
    else:
        st.warning("‚ö†Ô∏è –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ö–æ—Ç—è –±—ã –ø–æ–ª—è '–î–ª—è –∫–æ–≥–æ –Ω—É–∂–µ–Ω –≤—Ä–∞—á?' –∏ '–¢–∏–ø –ø—Ä–∏–µ–º–∞'")
        st.button("‚úÖ –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞", type="primary", disabled=True)


def show_voice_additional_questions_status(voice_additional):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —É—Ç–æ—á–Ω—è—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤"""
    st.markdown("### –ò–¥–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–π –æ–ø—Ä–æ—Å...")

    # –¢–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
    if voice_additional.current_question:
        st.info(f"**–¢–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å:** {voice_additional.current_question['text']}")

    # –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞
    if 'voice_additional_status' in st.session_state:
        st.markdown("####  –ò—Å—Ç–æ—Ä–∏—è:")
        for message in st.session_state.voice_additional_status[-5:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π
            st.write(message)

    # –ü—Ä–æ–≥—Ä–µ—Å—Å
    if hasattr(voice_additional, 'current_question_index'):
        progress = (voice_additional.current_question_index + 1) / len(voice_additional.questions)
    # st.progress(progress)
    # st.write(f"–í–æ–ø—Ä–æ—Å {voice_additional.current_question_index + 1} –∏–∑ {len(voice_additional.questions)}")

    # –ö–Ω–æ–ø–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    if st.button("üõë –ó–∞–∫–æ–Ω—á–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", type="secondary", key="stop_voice_questions"):
        voice_additional.stop_questions()
        st.rerun()


def show_voice_additional_questions(voice_additional):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤—ã—Ö —É—Ç–æ—á–Ω—è—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤"""
    st.subheader("üé§ –ì–æ–ª–æ—Å–æ–≤—ã–µ —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã")

    # –¢–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
    if voice_additional.current_question:
        st.info(f"**–¢–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å:** {voice_additional.current_question['text']}")
        st.write(f"*{voice_additional.current_question['hint']}*")

    # –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞
    if 'voice_additional_status' in st.session_state:
        st.markdown("###  –ò—Å—Ç–æ—Ä–∏—è:")
        for message in st.session_state.voice_additional_status[-10:]:
            st.write(message)

    # –ö–Ω–æ–ø–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    if st.button("üõë –ó–∞–≤–µ—Ä—à–∏—Ç—å", type="secondary"):
        voice_additional.stop_questions()
        st.rerun()

    # –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã
    if voice_additional.get_status() == "completed":
        st.success("‚úÖ –í—Å–µ —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")

        if st.button("‚û°Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞", type="primary"):
            st.session_state.additional_answers = voice_additional.get_answers()
            st.session_state.current_step = 7
            st.rerun()


if 'doctor_matcher' not in st.session_state:
    st.session_state.doctor_matcher = DoctorMatcher('all_doctors.csv')  # —É–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É CSV


def show_doctor_search_results():
    """–ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –≤—Ä–∞—á–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞–º–∏"""
    st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–¥–±–æ—Ä–∞ –≤—Ä–∞—á–∞")

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    if st.session_state.user_data.get('knows_doctor') == 'dont_know':
        target_specialty = st.session_state.user_data.get('recommendation', '–¢–µ—Ä–∞–ø–µ–≤—Ç')
    else:
        target_specialty = st.session_state.user_data.get('doctor_specialty', '–¢–µ—Ä–∞–ø–µ–≤—Ç')

    # –ü–æ–ª—É—á–∞–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    additional_answers = st.session_state.get('additional_answers', {})
    criteria, criteria_text = get_doctor_search_criteria(target_specialty, additional_answers)

    # –®–∞–≥ 1: –§–∏–ª—å—Ç—Ä—É–µ–º –≤—Ä–∞—á–µ–π –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
    with st.spinner("üîç –õ–∏–ª—É –∏—â–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤—Ä–∞—á–µ–π ..."):
        filtered_df, candidates_profiles = st.session_state.doctor_matcher.get_filtered_candidates(target_specialty)

    if filtered_df.empty:
        st.error("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤—Ä–∞—á–µ–π –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏")
        st.info("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")
        return

    # –®–∞–≥ 2: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    # st.markdown("### üìä –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–∞–Ω–¥–∏–¥–∞—Ç—ã")

    col1, col2, col3 = st.columns(3)
    with col1:
        categories = filtered_df['doctor_category'].value_counts()
        st.metric("–í—ã—Å—à–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è", categories.get('high', 0))
    with col2:
        degrees = filtered_df['degree'].value_counts()
        st.metric("–° —É—á–µ–Ω–æ–π —Å—Ç–µ–ø–µ–Ω—å—é", len(filtered_df[filtered_df['degree'] != 'none']))

    # –®–∞–≥ 3: –ò—Å–ø–æ–ª—å–∑—É–µ–º LLM –¥–ª—è –≤—ã–±–æ—Ä–∞ –ª—É—á—à–∏—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
    with st.spinner(" –õ–∏–ª—É –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –∏ –≤—ã–±–∏—Ä–∞–µ—Ç –ª—É—á—à–∏—Ö..."):
        top_doctors_recommendation = select_top_doctors(
            candidates_profiles,
            criteria_text,
            target_specialty,
            num_doctors=min(5, len(filtered_df))  # –ù–µ –±–æ–ª—å—à–µ —á–µ–º –µ—Å—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
        )

    # –®–∞–≥ 4: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ AI
    st.markdown("---")
    st.markdown("### üèÜ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –≤—Ä–∞—á–∏")
    st.success(top_doctors_recommendation)

    st.subheader("‚úÖ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

    st.success("–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞!")

    st.markdown("""
        ### –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ —Å–∞–π—Ç: https://napopravku.ru/
        üìû –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–ª—É–∂–±—ã:
        - **–°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å**: 103
        - **–ï–¥–∏–Ω–∞—è —Å–ª—É–∂–±–∞ —Å–ø–∞—Å–µ–Ω–∏—è**: 112
        """)
    # –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    if st.button("üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–¥–±–æ—Ä", type="primary"):
        save_consultation()
        st.session_state.current_step = 8
        st.rerun()


#def show_final_results():
  #  """–§–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏"""
  #  st.subheader("‚úÖ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

  #  st.success("–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞!")

 #   st.markdown("""
    ### –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ —Å–∞–π—Ç: https://napopravku.ru/
  #  üìû –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–ª—É–∂–±—ã:
  #  - **–°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å**: 103
  #  - **–ï–¥–∏–Ω–∞—è —Å–ª—É–∂–±–∞ —Å–ø–∞—Å–µ–Ω–∏—è**: 112
   # """)


def save_consultation():
    pass

    # try:
    # –ë—ã—Å—Ç—Ä–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    # consultation_data = {
    #  'timestamp': datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
    # 'city': st.session_state.user_data.get('city'),
    # 'specialty': st.session_state.user_data.get('doctor_specialty') or st.session_state.user_data.get(
    #     'recommendation'),
    #  'doctor_id': st.session_state.selected_doctor.get('id') if 'selected_doctor' in st.session_state else None
    #   }

    # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏
    #  if 'consultation_history' not in st.session_state:
    #    st.session_state.consultation_history = []

    # –ë—ã—Å—Ç—Ä–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ (–æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏)
    #   st.session_state.consultation_history.append(consultation_data)
    #   if len(st.session_state.consultation_history) > 50:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
    #      st.session_state.consultation_history = st.session_state.consultation_history[-50:]


# except Exception as e:
# –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É
#   print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏: {e}")


def get_consultation_type():
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    knows_doctor = st.session_state.user_data.get('knows_doctor')
    if knows_doctor == 'knows_name':
        return "–ó–∞–ø–∏—Å—å –∫ –∏–∑–≤–µ—Å—Ç–Ω–æ–º—É –≤—Ä–∞—á—É (–§–ò–û)"
    elif knows_doctor == 'knows_specialty':
        return "–ó–∞–ø–∏—Å—å –ø–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏"
    elif knows_doctor == 'dont_know':
        return "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ —Å–∏–º–ø—Ç–æ–º–∞–º"
    return "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ"


def show_doctor_appointment_stub():
    """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫ –≤—Ä–∞—á—É"""
    st.success("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–∞—á–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")

    st.markdown("### üóìÔ∏è –ó–∞–ø–∏—Å—å –∫ –≤—Ä–∞—á—É")

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –≤—Ä–∞—á–µ
    col1, col2 = st.columns(2)

    with col1:
        if st.session_state.user_data.get('doctor_name'):
            st.write(f"**–§–ò–û –≤—Ä–∞—á–∞:** {st.session_state.user_data['doctor_name']}")

    # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∑–∞–ø–∏—Å–∏
    st.markdown("---")
    st.markdown("""
    <div style='background-color: #f0f2f6; padding: 20px; border-radius: 10px; border-left: 5px solid #4CAF50;'>
    <h3 style='color: #1f77b4; margin-top: 0;'>üìç –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å–∏—Å—Ç–µ–º–∞ –∑–∞–ø–∏—Å–∏ –∫ –≤—Ä–∞—á—É</h3>

    """, unsafe_allow_html=True)

    # def save_consultation():


# """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –≤ –∏—Å—Ç–æ—Ä–∏—é"""


# consultation_data = {
# 'timestamp': datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
#   'city': st.session_state.user_data.get('city'),
#  'knows_doctor': st.session_state.user_data.get('knows_doctor'),
#  'doctor_name': st.session_state.user_data.get('doctor_name'),
#  'doctor_specialty': st.session_state.user_data.get('doctor_specialty'),
#  'symptoms': st.session_state.user_data.get('symptoms'),
#   'recommendation': st.session_state.user_data.get('recommendation'),
#  'additional_answers': st.session_state.get('additional_answers', {})
# }

# if 'consultation_history' not in st.session_state:
# st.session_state.consultation_history = []

# st.session_state.consultation_history.append(consultation_data)


if __name__ == "__main__":
    main()