import streamlit as st
from datetime import datetime
from ai_helper import (
    ask_question,
    get_ai_recommendation,
    initialize_ai_consultation,
    generate_next_question,
    process_user_answer,
    is_consultation_complete
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –õ–∏–ª—É",
    page_icon="üè•",
    layout="centered"
)


def reset_session():
    """–°–±—Ä–æ—Å —Å–µ—Å—Å–∏–∏"""
    for key in list(st.session_state.keys()):
        del st.session_state[key]


def main():
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è)
    st.title("üè• –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –õ–∏–ª—É")
    st.markdown("---")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session state
    if 'current_step' not in st.session_state:
        st.session_state.current_step = 0
    if 'user_data' not in st.session_state:
        st.session_state.user_data = {}

    show_current_step()

    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª–æ (–∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞)
    if st.session_state.current_step > 0:
        st.markdown("---")
        if st.button("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"):
            reset_session()
            st.rerun()


def show_current_step():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ–∫—É—â–∏–π —à–∞–≥"""
    current_step = st.session_state.current_step

    if current_step == 0:
        show_welcome_screen()
    elif current_step == 1:
        show_city_selection()
    elif current_step == 2:
        show_doctor_selection_type()
    elif current_step == 3:
        show_doctor_name_input()  # –ó–Ω–∞–µ—Ç –§–ò–û
    elif current_step == 3.5:
        show_specialty_selection()  # –ó–Ω–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    elif current_step == 4:
        show_symptoms_input()  # –ù–µ –∑–Ω–∞–µ—Ç –≤—Ä–∞—á–∞
    elif current_step == 5:
        show_ai_consultation()  # AI –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    elif current_step == 6:
        show_recommendation()  # –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è
    elif current_step == 6.5:
        show_additional_questions()  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã (–æ–±—â–∏–π –¥–ª—è –≤—Å–µ—Ö)
    elif current_step == 7:
        show_doctor_search_results()  # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
   # elif current_step == 8:
       # show_final_results()  # –§–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã


def show_welcome_screen():
    """–≠–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"""
    st.markdown("## üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")
    st.markdown("–Ø - **–õ–∏–ª—É**, –≤–∞—à –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –ü–æ–º–æ–≥—É –≤–∞–º –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –Ω—É–∂–Ω–æ–º—É –≤—Ä–∞—á—É.")

    if st.button("‚û°Ô∏è –°—Ç–∞—Ä—Ç!", type="primary"):
        st.session_state.current_step = 1
        st.rerun()


def show_city_selection():
    """–í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞"""
    st.subheader("üìç –®–∞–≥ 1: –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥")

    # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥
    city = st.text_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:", placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞")

    if city:
        st.session_state.user_data['city'] = city
        st.success(f"‚úÖ –í—ã–±—Ä–∞–Ω –≥–æ—Ä–æ–¥: {city}")

        # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        if st.button("‚û°Ô∏è –î–∞–ª–µ–µ", type="primary"):
            st.session_state.current_step = 2
            st.rerun()
    else:
        st.warning("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥")


def show_doctor_selection_type():
    """–í—ã–±–æ—Ä —Ç–∏–ø–∞ –∑–∞–ø–∏—Å–∏ –∫ –≤—Ä–∞—á—É"""
    st.subheader("üë®‚Äç‚öïÔ∏è –®–∞–≥ 2: –ó–∞–ø–∏—Å—å –∫ –≤—Ä–∞—á—É")
    st.write("–í—ã –∑–Ω–∞–µ—Ç–µ, –∫ –∫–∞–∫–æ–º—É –≤—Ä–∞—á—É —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?")

    col1, col2, col3 = st.columns(3)

    with col1:
        if st.button("‚úÖ –î–∞, –∑–Ω–∞—é –§–ò–û", use_container_width=True):
            st.session_state.user_data['knows_doctor'] = 'knows_name'
            st.session_state.current_step = 3
            st.rerun()

    with col2:
        if st.button("üìã –ó–Ω–∞—é —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é", use_container_width=True):
            st.session_state.user_data['knows_doctor'] = 'knows_specialty'
            st.session_state.current_step = 3.5  # –ù–æ–≤—ã–π —à–∞–≥ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
            st.rerun()

    with col3:
        if st.button("‚ùå –ù–µ –∑–Ω–∞—é", use_container_width=True):
            st.session_state.user_data['knows_doctor'] = 'dont_know'
            st.session_state.current_step = 4
            st.rerun()


def show_doctor_name_input():
    """–í–≤–æ–¥ –§–ò–û –≤—Ä–∞—á–∞ —Å –∑–∞–≥–ª—É—à–∫–æ–π –¥–ª—è –∑–∞–ø–∏—Å–∏"""
    st.subheader("üìù –®–∞–≥ 3: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–∞—á–µ")

    knows_name = st.radio(
        "–ó–Ω–∞–µ—Ç–µ –ª–∏ –≤—ã –§–ò–û –≤—Ä–∞—á–∞?",
        ["–î–∞, –∑–Ω–∞—é –§–ò–û", "–ù–µ—Ç, –∑–Ω–∞—é —Ç–æ–ª—å–∫–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å"]
    )

    if knows_name == "–î–∞, –∑–Ω–∞—é –§–ò–û":
        doctor_name = st.text_input("–í–≤–µ–¥–∏—Ç–µ –§–ò–û –≤—Ä–∞—á–∞ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å :")
        if doctor_name:
            st.session_state.user_data['doctor_name'] = doctor_name
            st.session_state.user_data['doctor_specialty'] = "–ò–∑–≤–µ—Å—Ç–Ω–æ –§–ò–û"
    else:
        doctor_specialty = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤—Ä–∞—á–∞:")
        if doctor_specialty:
            st.session_state.user_data['doctor_specialty'] = doctor_specialty
            st.session_state.user_data['doctor_specialty'] = "–ù–µ –∏–∑–≤–µ—Å—Ç–Ω–æ"

    # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –≤—Ä–∞—á–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –∑–∞–ø–∏—Å–∏
    if st.session_state.user_data.get('doctor_name') or st.session_state.user_data.get('doctor_specialty'):
        st.markdown("---")
        show_doctor_appointment_stub()

        if st.button("‚û°Ô∏è –ó–∞–≤–µ—Ä—à–∏—Ç—å", type="primary"):
            save_consultation()
            st.session_state.current_step = 6
            st.rerun()


def show_specialty_selection():
    """–í—ã–±–æ—Ä —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—Ä–∞—á–∞"""
    st.subheader("üéØ –®–∞–≥ 3: –í—ã–±–æ—Ä —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—Ä–∞—á–∞")

    # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    specialties = [
        "–¢–µ—Ä–∞–ø–µ–≤—Ç", "–ö–∞—Ä–¥–∏–æ–ª–æ–≥", "–ù–µ–≤—Ä–æ–ª–æ–≥", "–ì–∞—Å—Ç—Ä–æ—ç–Ω—Ç–µ—Ä–æ–ª–æ–≥", "–≠–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥",
        "–û—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥", "–û—Ç–æ–ª–∞—Ä–∏–Ω–≥–æ–ª–æ–≥ (–õ–û–†)", "–î–µ—Ä–º–∞—Ç–æ–ª–æ–≥", "–ì–∏–Ω–µ–∫–æ–ª–æ–≥", "–£—Ä–æ–ª–æ–≥",
        "–û—Ä—Ç–æ–ø–µ–¥", "–•–∏—Ä—É—Ä–≥", "–ü–µ–¥–∏–∞—Ç—Ä", "–ü—Å–∏—Ö–∏–∞—Ç—Ä", "–ü—Å–∏—Ö–æ–ª–æ–≥",
        "–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥", "–û–Ω–∫–æ–ª–æ–≥", "–ê–ª–ª–µ—Ä–≥–æ–ª–æ–≥", "–†–µ–≤–º–∞—Ç–æ–ª–æ–≥", "–ù–µ—Ñ—Ä–æ–ª–æ–≥"
    ]

    selected_specialty = st.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤—Ä–∞—á–∞:",
        [""] + specialties,
        key="specialty_select"
    )

    if selected_specialty:
        st.session_state.user_data['doctor_specialty'] = selected_specialty
        st.session_state.user_data['doctor_name'] = "–ù–µ –∏–∑–≤–µ—Å—Ç–Ω–æ"
        st.success(f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {selected_specialty}")

        if st.button("‚û°Ô∏è –£—Ç–æ—á–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞", type="primary"):
            st.session_state.current_step = 6.5  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º
            st.rerun()


def show_doctor_appointment_stub():
    """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫ –≤—Ä–∞—á—É"""
    st.success("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–∞—á–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")

    st.markdown("### üóìÔ∏è –ó–∞–ø–∏—Å—å –∫ –≤—Ä–∞—á—É")

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –≤—Ä–∞—á–µ
    col1, col2 = st.columns(2)

    with col1:
        if st.session_state.user_data.get('doctor_name'):
            st.write(f"**–§–ò–û –≤—Ä–∞—á–∞:** {st.session_state.user_data['doctor_name']}")
            st.markdown("---")
            st.markdown("""
             üìç –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å—Å—ã–ª–∫–∞ –∑–∞–ø–∏—Å–∏ –∫ –≤—Ä–∞—á—É —á–µ—Ä–µ–∑ —Å–∞–π—Ç  

               """, unsafe_allow_html=True)
    with col2:
        if st.session_state.user_data.get('doctor_specialty'):
            st.write(f"**–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:** {st.session_state.user_data['doctor_specialty']}")

            # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∑–∞–ø–∏—Å–∏
            st.markdown("---")
            st.markdown("""
            üìç –õ–∏–ª—É –ø–æ–¥–±–µ—Ä–µ—Ç –≤–∞–º –≤—Ä–∞—á–∞.
  
            """, unsafe_allow_html=True)


def show_symptoms_input():
    """–í–≤–æ–¥ –∂–∞–ª–æ–±"""
    st.subheader("ü§í –®–∞–≥ 3: –û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ —Å–∏–º–ø—Ç–æ–º—ã")
    age = st.text_area(
        "—É–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª –∏ –≤–æ–∑—Ä–∞—Å—Ç",
        placeholder="",
        height=100
    )
    symptoms = st.text_area(
        "–ß—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç? –û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –∂–∞–ª–æ–±—ã:",
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –±–æ–ª–∏—Ç –≥–æ–ª–æ–≤–∞, —Ç–æ—à–Ω–æ—Ç–∞, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –±–æ–ª—å –≤ –∂–∏–≤–æ—Ç–µ...",
        height=100
    )

    if symptoms and age:
        st.session_state.user_data['symptoms'] = symptoms + age
        st.success("‚úÖ –°–∏–º–ø—Ç–æ–º—ã –∑–∞–ø–∏—Å–∞–Ω—ã")

        if st.button("‚û°Ô∏è –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", type="primary"):
            st.session_state.current_step = 5
            st.rerun()


def show_ai_consultation():
    """AI –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å 3 –≤–æ–ø—Ä–æ—Å–∞–º–∏"""
    st.subheader("üîç –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –õ–∏–ª—É")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
    if 'ai_consultation' not in st.session_state:
        st.session_state.ai_consultation = initialize_ai_consultation(
            st.session_state.user_data.get('symptoms', '')
        )

    consultation = st.session_state.ai_consultation

    # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
    progress = consultation['questions_asked'] / 2
    st.progress(progress)
    st.write(f"–í–æ–ø—Ä–æ—Å {consultation['questions_asked'] + 1} –∏–∑ 2")

    # –ï—Å–ª–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
    if not is_consultation_complete(consultation):

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–æ–ø—Ä–æ—Å, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
        if consultation['current_question'] is None:
            with st.spinner("–õ–∏–ª—É –¥—É–º–∞–µ—Ç –Ω–∞–¥ –≤–æ–ø—Ä–æ—Å–æ–º..."):
                if generate_next_question(consultation):
                    st.rerun()
                else:
                    st.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
                    return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
        if consultation['current_question']:
            st.markdown(f"**–õ–∏–ª—É:** {consultation['current_question']}")

            # –ü–æ–ª–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
            answer = st.text_input("–í–∞—à –æ—Ç–≤–µ—Ç:", key=f"answer_{consultation['questions_asked']}")

            if answer:
                if st.button("‚û°Ô∏è –û—Ç–≤–µ—Ç–∏—Ç—å", type="primary"):
                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç
                    consultation = process_user_answer(consultation, answer)
                    st.session_state.ai_consultation = consultation
                    st.rerun()

    else:
        # –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∑–∞–¥–∞–Ω—ã, –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
        if 'final_recommendation' not in st.session_state:
            with st.spinner("–õ–∏–ª—É –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã..."):
                recommendation = get_ai_recommendation(consultation['patient_info'])
                st.session_state.final_recommendation = recommendation
                st.session_state.user_data['recommendation'] = recommendation
                st.rerun()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –∏ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        st.success("‚úÖ –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∑–∞–¥–∞–Ω—ã!")
        st.info(f"**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –õ–∏–ª—É:** {st.session_state.final_recommendation}")

        if st.button("‚û°Ô∏è –ó–∞–≤–µ—Ä—à–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", type="primary"):
            st.session_state.current_step = 6
            st.rerun()


def show_additional_questions():
    """–ë–ª–æ–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–¥–±–æ—Ä–∞ –≤—Ä–∞—á–∞"""
    st.subheader("üéØ –£—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –≤—Ä–∞—á–∞")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session state –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    if 'additional_answers' not in st.session_state:
        st.session_state.additional_answers = {}

    st.info("–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–¥–±–æ—Ä–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞")

    # 1. –î–µ—Ç—Å–∫–∏–π –∏–ª–∏ –≤–∑—Ä–æ—Å–ª—ã–π –≤—Ä–∞—á
    st.markdown("### üë∂üë®‚Äçü¶∞ –î–ª—è –∫–æ–≥–æ –Ω—É–∂–µ–Ω –≤—Ä–∞—á?")
    patient_type = st.radio(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–∞—Ü–∏–µ–Ω—Ç–∞:",
        ["–í–∑—Ä–æ—Å–ª—ã–π (–æ—Ç 18 –ª–µ—Ç)", "–î–µ—Ç—Å–∫–∏–π (–¥–æ 18 –ª–µ—Ç)", "–ù–µ –≤–∞–∂–Ω–æ"],
        key="patient_type"
    )
    st.session_state.additional_answers['patient_type'] = patient_type

    # 2. –ü–æ–ª –≤—Ä–∞—á–∞
    st.markdown("### üë®‚Äç‚öïÔ∏èüë©‚Äç‚öïÔ∏è –í–∞–∂–µ–Ω –ª–∏ –ø–æ–ª –≤—Ä–∞—á–∞?")
    doctor_gender = st.text_area(
        "–í–∞–∂–µ–Ω –ª–∏ –¥–ª—è –≤–∞—Å –ø–æ–ª –≤—Ä–∞—á–∞ ?",
        placeholder="–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–∞ –∂–µ–Ω—Å–∫–∏–π",
        height=80
    )
    st.session_state.doctor_gender['doctor_gender'] = doctor_gender
    # 3. –£—á–µ–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å
    st.markdown("### üéì –í–∞–∂–Ω–∞ –ª–∏ —É—á–µ–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å, —Å—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã, –∫–∞—Ç–µ–≥–æ—Ä–∏—è?")
    academic_degree = st.text_area(
        "–í–∞–∂–Ω–∞ –ª–∏ —É—á–µ–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å, —Å—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã, –∫–∞—Ç–µ–≥–æ—Ä–∏—è?",
        placeholder=" –Ω–∞–ø—Ä–∏–º–µ—Ä –∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π —Å—Ç–∞–∂ –±–æ–ª–µ–µ 5 –ª–µ—Ç",
        height=80
    )
    st.session_state.additional_answers['academic_degree'] = academic_degree

    st.markdown("---")

    # 5. –¢–∏–ø –ø—Ä–∏–µ–º–∞
    st.markdown("### üè• –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–µ–º–µ")
    appointment_type = st.text_area(
        "–ï—Å—Ç—å —ç—Ç–æ –ø–µ—Ä–≤–∏—á–Ω—ã–π –ø—Ä–∏–µ–º –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π ?",
        placeholder="",
        height=80
    )
    st.session_state.additional_answers['appointment_type'] = appointment_type

    # 6. –ï—Å–ª–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π - –ø—Ä–µ–¥—ã–¥—É—â–∏–π –¥–∏–∞–≥–Ω–æ–∑
    if appointment_type == "–ù–µ—Ç, –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –ø—Ä–∏–µ–º/–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è":
        previous_diagnosis = st.text_area(
            "–ö–∞–∫–æ–π –¥–∏–∞–≥–Ω–æ–∑ –±—ã–ª –ø–æ—Å—Ç–∞–≤–ª–µ–Ω —Ä–∞–Ω–µ–µ?",
            placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –¥–∏–∞–≥–Ω–æ–∑, –µ—Å–ª–∏ –ø–æ–º–Ω–∏—Ç–µ...",
            height=80
        )
        st.session_state.additional_answers['previous_diagnosis'] = previous_diagnosis

    # 7. –•—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è
    st.markdown("### üíä –ù–∞–ª–∏—á–∏–µ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π")
    chronic_diseases = st.text_area(
        "–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Ç—è–∂–µ–ª—ã–µ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è?",
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: —Å–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç, –≥–∏–ø–µ—Ä—Ç–æ–Ω–∏—è, –∞—Å—Ç–º–∞...",
        height=80
    )
    st.session_state.additional_answers['chronic_diseases'] = chronic_diseases

    # 8. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    st.markdown("### üîç –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è")
    additional_examinations = st.text_area(
        "–ö–∞–∫–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –º–æ–≥—É—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è?",
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –£–ó–ò, –ú–†–¢, –∞–Ω–∞–ª–∏–∑—ã –∫—Ä–æ–≤–∏, —Ä–µ–Ω—Ç–≥–µ–Ω...",
        height=80
    )
    st.session_state.additional_answers['additional_examinations'] = additional_examinations

    # 9. –û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è
    st.markdown("### üåü –û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è")
    special_requirements = st.text_area(
        "–ï—Å—Ç—å –ª–∏ –æ—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∫ –≤—Ä–∞—á—É –∏–ª–∏ –ø—Ä–∏–µ–º—É?",
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–µ–º–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ, –≤—Ä–∞—á —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π, –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏...",
        height=80
    )
    st.session_state.additional_answers['special_requirements'] = special_requirements

    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
    st.markdown("---")
    if st.button("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞", type="primary"):
        st.session_state.current_step = 7  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–∫–∞–∑—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        st.rerun()


def show_doctor_search_results():
    """–ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –≤—Ä–∞—á–∞ —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤"""
    st.subheader("üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–¥–±–æ—Ä–∞ –≤—Ä–∞—á–∞")

    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏–∑ AI –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
    preliminary_specialty = st.session_state.user_data.get('recommendation', '–¢–µ—Ä–∞–ø–µ–≤—Ç')

    # –ü–æ–ª—É—á–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    additional_answers = st.session_state.get('additional_answers', {})

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞
   # criteria, criteria_text = get_doctor_search_criteria(preliminary_specialty, additional_answers)

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–¥–∫—É –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤
    st.success("‚úÖ –ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")

    col1, col2 = st.columns(2)

  #  with col1:
       # st.markdown("### üìã –í–∞—à–∏ –∫—Ä–∏—Ç–µ—Ä–∏–∏:")
      #  st.write(f"**–û—Å–Ω–æ–≤–Ω–∞—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:** {criteria['specialty']}")
      #  st.write(f"**–¢–∏–ø –ø–∞—Ü–∏–µ–Ω—Ç–∞:** {criteria['patient_type']}")
      #  st.write(f"**–ü–æ–ª –≤—Ä–∞—á–∞:** {criteria['doctor_gender']}")
       # st.write(f"**–°—Ç–∞–∂:** {criteria['experience']}")

  #  with col2:
     #   st.markdown("### üè• –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:")
      #  st.write(f"**–¢–∏–ø –ø—Ä–∏–µ–º–∞:** {criteria['appointment_type']}")
      #  if criteria['previous_diagnosis']:
         #   st.write(f"**–ü—Ä–µ–¥—ã–¥—É—â–∏–π –¥–∏–∞–≥–Ω–æ–∑:** {criteria['previous_diagnosis']}")
       # if criteria['chronic_diseases']:
          #  st.write(f"**–•—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è:** {criteria['chronic_diseases']}")
       # if criteria['additional_examinations']:
         #   st.write(f"**–û–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:** {criteria['additional_examinations']}")

   # if criteria['special_requirements']:
        #st.markdown("### üåü –û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è:")
        #st.info(criteria['special_requirements'])

    # –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
   # with st.spinner("–§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏..."):
       # final_recommendation = get_final_doctor_recommendation(criteria_text)

    st.markdown("---")
    st.markdown("### ü©∫ –§–∏–Ω–∞–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:")
  #  st.success(final_recommendation)

    # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∑–∞–ø–∏—Å–∏
    st.markdown("---")
    st.markdown("### üóìÔ∏è –ó–∞–ø–∏—Å—å –∫ –≤—Ä–∞—á—É")

    st.info("""
    **üìç –°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–±–æ—Ä–∞ –≤—Ä–∞—á–µ–π**

    –ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ —Å–∏—Å—Ç–µ–º–∞ –Ω–∞–π–¥–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤:
    - ‚úÖ –í—Ä–∞—á–∏ —Å –Ω—É–∂–Ω–æ–π —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
    - ‚úÖ –£—á–µ—Ç –≤—Å–µ—Ö –≤–∞—à–∏—Ö –ø–æ–∂–µ–ª–∞–Ω–∏–π
    - ‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º—è
    - ‚úÖ –†–µ–π—Ç–∏–Ω–≥–∏ –∏ –æ—Ç–∑—ã–≤—ã

    **–î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:** –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –Ω–∞—à–ª–∞ 3 –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤—Ä–∞—á–∞!
    """)

    # –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    if st.button("üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–¥–±–æ—Ä", type="primary"):
        save_consultation()
        st.session_state.current_step = 8
        st.rerun()


def show_recommendation():
    """–ü–æ–∫–∞–∑ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º"""
    st.subheader("üéØ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è")

    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –æ—Ç AI –µ—Å–ª–∏ –±—ã–ª–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ —Å–∏–º–ø—Ç–æ–º–∞–º
    if (st.session_state.user_data.get('knows_doctor') == 'dont_know' and
            'ai_consultation' in st.session_state and
            'recommendation' not in st.session_state.user_data):
        consultation = st.session_state.ai_consultation
        with st.spinner("–õ–∏–ª—É –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ —Å–∏–º–ø—Ç–æ–º—ã..."):
            recommendation = get_ai_recommendation(consultation['patient_info'])
            st.session_state.user_data['recommendation'] = recommendation
            st.session_state.user_data['doctor_specialty'] = recommendation
            st.session_state.user_data['consultation_type'] = 'AI –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è'

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
    if st.session_state.user_data.get('recommendation'):
        st.success("‚úÖ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        st.info(f"**–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç:** {st.session_state.user_data['recommendation']}")

    st.markdown("---")
    st.markdown("### üéØ –£—Ç–æ—á–Ω–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤")
    st.write("–î–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–¥–±–æ—Ä–∞ –≤—Ä–∞—á–∞ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤")

    if st.button("‚û°Ô∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ —É—Ç–æ—á–Ω—è—é—â–∏–º –≤–æ–ø—Ä–æ—Å–∞–º", type="primary"):
        st.session_state.current_step = 6.5  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º
        st.rerun()

    # –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
    st.markdown("---")
    st.markdown("""
    ### –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ —Å–∞–π—Ç: https://napopravku.ru/
    üìû –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–ª—É–∂–±—ã:
    - **–°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å**: 103
    - **–ï–¥–∏–Ω–∞—è —Å–ª—É–∂–±–∞ —Å–ø–∞—Å–µ–Ω–∏—è**: 112
    """)


def save_consultation():
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –≤ –∏—Å—Ç–æ—Ä–∏—é"""
    consultation_data = {
        'timestamp': datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        'city': st.session_state.user_data.get('city'),
        'knows_doctor': st.session_state.user_data.get('knows_doctor'),
        'doctor_name': st.session_state.user_data.get('doctor_name'),
        'doctor_specialty': st.session_state.user_data.get('doctor_specialty'),
        'symptoms': st.session_state.user_data.get('symptoms'),
        'recommendation': st.session_state.user_data.get('recommendation')
    }

    if 'consultation_history' not in st.session_state:
        st.session_state.consultation_history = []

    st.session_state.consultation_history.append(consultation_data)


if __name__ == "__main__":
    main()
